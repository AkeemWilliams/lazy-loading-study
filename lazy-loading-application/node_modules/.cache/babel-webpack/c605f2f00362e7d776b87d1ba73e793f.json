{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let LazyLoadElementsComponent = /*#__PURE__*/(() => {\n  class LazyLoadElementsComponent {\n    constructor(el) {\n      this.el = el;\n      this.isVisibleInView = false;\n      this.arrayTest = new Array(5);\n      this.testCount = 4;\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      const targets = this.el.nativeElement.querySelectorAll('img');\n      this.observer = new IntersectionObserver((entries, obs) => {\n        console.log(entries);\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const img = entry.target;\n            const src = img.getAttribute('data-lazy') || \"\";\n            img.setAttribute('src', src);\n            img.classList.add('fade');\n            obs.unobserve(entry.target);\n          }\n        });\n      }, {\n        threshold: 0\n      }); //this.observer.observe(target);\n\n      targets.forEach(target => {\n        this.observer.observe(target);\n      });\n    }\n\n  }\n\n  LazyLoadElementsComponent.ɵfac = function LazyLoadElementsComponent_Factory(t) {\n    return new (t || LazyLoadElementsComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  LazyLoadElementsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LazyLoadElementsComponent,\n    selectors: [[\"app-lazy-load-elements\"]],\n    hostVars: 2,\n    hostBindings: function LazyLoadElementsComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"green\", ctx.isVisibleInView);\n      }\n    },\n    decls: 24,\n    vars: 0,\n    consts: [[1, \"container\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/400/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/401/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/402/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/403/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/404/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/405/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/406/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/407/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/408/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/409/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/410/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/411/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/412/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/413/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/414/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/415/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/416/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/417/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/418/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/419/400/400\", \"height\", \"400\", \"width\", \"400\"], [\"loading\", \"lazy\", \"data-lazy\", \"https://picsum.photos/seed/420/400/400\", \"height\", \"400\", \"width\", \"400\"]],\n    template: function LazyLoadElementsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"lazy-load-elements works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵelement(3, \"img\", 1);\n        i0.ɵɵelement(4, \"img\", 2);\n        i0.ɵɵelement(5, \"img\", 3);\n        i0.ɵɵelement(6, \"img\", 4);\n        i0.ɵɵelement(7, \"img\", 5);\n        i0.ɵɵelement(8, \"img\", 6);\n        i0.ɵɵelement(9, \"img\", 7);\n        i0.ɵɵelement(10, \"img\", 8);\n        i0.ɵɵelement(11, \"img\", 9);\n        i0.ɵɵelement(12, \"img\", 10);\n        i0.ɵɵelement(13, \"img\", 11);\n        i0.ɵɵelement(14, \"img\", 12);\n        i0.ɵɵelement(15, \"img\", 13);\n        i0.ɵɵelement(16, \"img\", 14);\n        i0.ɵɵelement(17, \"img\", 15);\n        i0.ɵɵelement(18, \"img\", 16);\n        i0.ɵɵelement(19, \"img\", 17);\n        i0.ɵɵelement(20, \"img\", 18);\n        i0.ɵɵelement(21, \"img\", 19);\n        i0.ɵɵelement(22, \"img\", 20);\n        i0.ɵɵelement(23, \"img\", 21);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".container{box-sizing:border-box;padding:30px}.button{padding:1em 2em;margin:.5em;display:inline-block;font-size:.9em;font-family:Helvetica,sans-serif;font-weight:bold;text-transform:uppercase;color:#f56476;background-color:#fff;border:2px solid #f56476;transition:.2s color,.2s background-color,.2s border-color}.button:hover{color:#fff;background-color:#f56476}.button:focus{color:#3ddc97;border-color:currentColor}.button--small{font-size:.5em}.button--large{font-size:1.5em}\\n\"],\n    encapsulation: 2\n  });\n  return LazyLoadElementsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}